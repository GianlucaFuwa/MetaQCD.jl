name: CI
on:
pull_request:
  branches:
    - dirac
  push:
  branches:
    - dirac
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.9'
          - '1.10'
          - 'nightly'
        juliacputhreads:
          - 1
          - 3
        juliathreads:
          - 1
          - 2
          - 4
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "Develop the libraries since they aren't registered"
        run: |
          julia --project=. -e '
          using Pkg;
          Pkg.develop(matp(path->Pkg.PackageSpec.(;path="$(@__DIR__)/lib/$(path)"), raddir("./lib")));
          '
      - uses: julia-actions/julia-runtest@v1
        env:
          JULIA_NUM_THREADS: ${{ matrix.juliathreads }}
          JULIA_CPU_THREADS: ${{ matrix.juliacputhreads }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info
